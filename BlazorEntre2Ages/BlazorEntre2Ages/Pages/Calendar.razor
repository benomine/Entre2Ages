@using BlazorEntre2Ages.Models
@using BlazorEntre2Ages.Services
@using System.Security.Claims
@inject DialogService DialogService
@inject IEventService EventService
@inject IAuthorizationService AuthorizationService
@page "/calendar"

<div class="row">
    <div class="col-xl-6">
        <RadzenScheduler @ref=@Scheduler style="height: 768px;" TItem="Appointment" Data="@Appointments" StartProperty="Start" EndProperty="End"
                         TextProperty="Subject" SelectedIndex="2"
                         SlotSelect=@OnSlotSelect AppointmentSelect=@OnAppointmentSelect AppointmentRender=@OnAppointmentRender
                         >
            <RadzenDayView />
            <RadzenWeekView />
            <RadzenMonthView />
        </RadzenScheduler>
    </div>
    <div class="col-xl-6">

    </div>
</div>

@code {
    public RadzenScheduler<Appointment> Scheduler;

    public List<Appointment> Appointments;
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }
    ClaimsPrincipal _user;

    protected override async Task OnInitializedAsync()
    {
        _user = (await AuthenticationStateTask).User;
        var events = await EventService.GetAll();
        Appointments = events.Select(e => e.ToAppointment()).ToList();
    }

    async Task OnSlotSelect(SchedulerSlotSelectEventArgs args)
    {
        Appointment data = await DialogService.OpenAsync<AddAppointmentPage>("Add Appointment",
            new Dictionary<string, object>
            {
                { "Start", args.Start },
                { "End", args.End },
                });
        
        if (data != null)
        {
            Appointments.Add(data);
            var eventObject = data.ToEvent();
            eventObject.Author = _user.Identity.Name;
            await EventService.Create(eventObject);
            // Either call the Reload method or reassign the Data property of the Scheduler
            
            await Scheduler.Reload();
        }
    }

    async Task OnAppointmentSelect(SchedulerAppointmentSelectEventArgs<Appointment> args)
    {
        await DialogService.OpenAsync<EditAppointmentPage>("Edit Appointment",
            new Dictionary<string, object> { { "Appointment", args.Data } });

        await EventService.Update(args.Data.ToEvent());

        await Scheduler.Reload();
    }

    void OnAppointmentRender(SchedulerAppointmentRenderEventArgs<Appointment> args)
    {

        args.Attributes["style"] = "background: #a58bbb";

    }
    

}