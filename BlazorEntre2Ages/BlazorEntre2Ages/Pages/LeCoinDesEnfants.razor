@page "/coindesenfants"
@using BlazorEntre2Ages.Models
@using BlazorEntre2Ages.Services
@inject IMediaService MediaService
@inject NavigationManager NavigationManager

<h3>Gallerie des images</h3>
<div>
    <InputFile OnChange="@OnFileSelection" accept="image/png,image/jpg,image/gif"></InputFile>
    <div class="row">
        @if(_imgUrl != null)
        {
            <div>
                <img src="@_imgUrl" alt="" />
            </div>
        }
        <div>
            <button class="btn btn-primary m-3" type="submit" @onclick="Upload">Upload</button>
        </div>
    </div>
</div>
@if (Medias == null || Medias.Count == 0)
{
    <div><h3>Chargement des images.</h3></div>
}
else {
    <div class="col-xl-12">
        @foreach (var media in Medias)
        {
            <img src="@media.Data" alt="@media.Title" />
        }
    </div>
}

@code{
    string _imgUrl = string.Empty;
    Media _media;
    List<Media> Medias { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Medias = await MediaService.GetAll();
    }

    private async Task OnFileSelection(InputFileChangeEventArgs e)
    {
        IBrowserFile imgFile = e.File;
        var buffers = new byte[imgFile.Size];
        await imgFile.OpenReadStream().ReadAsync(buffers);
        var imageType = imgFile.ContentType;
        _imgUrl = $"data:{imageType};base64,{Convert.ToBase64String(buffers)}";
        _media = new Media
        {
            Title = e.File.Name,
            Data = _imgUrl
        };
    }
    
    public async Task Upload()
    {
        if (_imgUrl != null || _imgUrl != string.Empty)
        {
            Medias.Add(_media);
            await MediaService.Create(_media);
            StateHasChanged();
        }
    }
}